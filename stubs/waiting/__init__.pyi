from typing import Any, Optional

def wait(*args: Any, **kwargs: Any) -> bool: ...
def iterwait(predicate: Any, timeout_seconds: Optional[Any] = ..., sleep_seconds: int = ..., result: Optional[Any] = ..., waiting_for: Optional[Any] = ..., on_poll: Optional[Any] = ..., expected_exceptions: Any = ...) -> None: ...

class _SleepToggle:
    enabled: bool = ...
    def __call__(self) -> None: ...

class _Result:
    result: Any = ...

class Aggregate:
    predicates: Any = ...
    def __init__(self, predicates: Any) -> None: ...

class ANY(Aggregate):
    def __call__(self) -> bool: ...

class ALL(Aggregate):
    def __call__(self) -> bool: ...
